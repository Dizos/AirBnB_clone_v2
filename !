#!/usr/bin/python3
"""
Unit tests for User class
"""
import unittest
from models.user import User
from models.base_model import BaseModel


class TestUser(unittest.TestCase):
    """Test cases for User class"""

    def setUp(self):
        """Set up test cases"""
        self.user = User()

    def tearDown(self):
        """Clean up after tests"""
        try:
            import os
            os.remove("file.json")
        except Exception:
            pass

    def test_init(self):
        """Test initialization"""
        self.assertIsInstance(self.user, User)
        self.assertTrue(issubclass(User, BaseModel))
        self.assertIsInstance(self.user.email, str)
        self.assertIsInstance(self.user.password, str)
        self.assertIsInstance(self.user.first_name, str)
        self.assertIsInstance(self.user.last_name, str)

    def test_attributes(self):
        """Test attribute assignment"""
        self.user.email = "test@test.com"
        self.user.password = "password123"
        self.user.first_name = "John"
        self.user.last_name = "Doe"
        
        self.assertEqual(self.user.email, "test@test.com")
        self.assertEqual(self.user.password, "password123")
        self.assertEqual(self.user.first_name, "John")
        self.assertEqual(self.user.last_name, "Doe")

    def test_to_dict(self):
        """Test to_dict method"""
        self.user.email = "test@test.com"
        self.user.password = "password123"
        user_dict = self.user.to_dict()
        
        self.assertEqual(user_dict["email"], "test@test.com")
        self.assertEqual(user_dict["password"], "password123")
        self.assertEqual(user_dict["__class__"], "User")

    def test_str(self):
        """Test string representation"""
        string = str(self.user)
        self.assertIn("[User]", string)
        self.assertIn("id", string)
        self.assertIn(self.user.id, string)
